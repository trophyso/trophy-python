# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from .streak_frequency import StreakFrequency
import typing
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class BaseStreakResponse(UniversalBaseModel):
    length: int = pydantic.Field()
    """
    The length of the user's current streak.
    """

    frequency: StreakFrequency = pydantic.Field()
    """
    The frequency of the streak.
    """

    started: typing.Optional[str] = pydantic.Field(default=None)
    """
    The date the streak started.
    """

    period_start: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="periodStart")
    ] = pydantic.Field(default=None)
    """
    The start date of the current streak period.
    """

    period_end: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="periodEnd")
    ] = pydantic.Field(default=None)
    """
    The end date of the current streak period.
    """

    expires: typing.Optional[str] = pydantic.Field(default=None)
    """
    The date the streak will expire if the user does not increment a metric.
    """

    freezes: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of available streak freezes. Only present if the organization has enabled streak freezes.
    """

    max_freezes: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="maxFreezes")
    ] = pydantic.Field(default=None)
    """
    The maximum number of streak freezes a user can have. Only present if the organization has enabled streak freezes.
    """

    freeze_auto_earn_interval: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="freezeAutoEarnInterval")
    ] = pydantic.Field(default=None)
    """
    The interval at which the user will earn streak freezes, in days. Only present if the organization has enabled streak freeze auto-earn.
    """

    freeze_auto_earn_amount: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="freezeAutoEarnAmount")
    ] = pydantic.Field(default=None)
    """
    The amount of streak freezes the user will earn per interval. Only present if the organization has enabled streak freeze auto-earn.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
