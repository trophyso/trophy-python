# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class PointsTriggerResponseEventAttribute(UniversalBaseModel):
    """
    Event attribute filter that must be met for this trigger to activate. Only present if the trigger has an event filter configured.
    """

    key: str = pydantic.Field()
    """
    The key of the event attribute.
    """

    value: str = pydantic.Field()
    """
    The required value of the event attribute.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
