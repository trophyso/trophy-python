# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class EventRequestUser(UniversalBaseModel):
    """
    The user that triggered the event.
    """

    id: str = pydantic.Field()
    """
    The ID of the user in your database. Must be a string.
    """

    email: typing.Optional[str] = pydantic.Field(default=None)
    """
    The user's email address.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name to refer to the user by in emails.
    """

    tz: typing.Optional[str] = pydantic.Field(default=None)
    """
    The user's timezone (used for email scheduling).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
