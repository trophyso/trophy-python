# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PointsRange(UniversalBaseModel):
    from_: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="from")
    ] = pydantic.Field(default=None)
    """
    The start of the points range. Inclusive.
    """

    to: typing.Optional[float] = pydantic.Field(default=None)
    """
    The end of the points range. Inclusive.
    """

    users: typing.Optional[float] = pydantic.Field(default=None)
    """
    The number of users in this points range.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
