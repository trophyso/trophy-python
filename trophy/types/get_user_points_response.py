# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .points_award import PointsAward
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GetUserPointsResponse(UniversalBaseModel):
    total: typing.Optional[float] = pydantic.Field(default=None)
    """
    The user's total points
    """

    awards: typing.Optional[typing.List[PointsAward]] = pydantic.Field(default=None)
    """
    Array of trigger awards that added points.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
