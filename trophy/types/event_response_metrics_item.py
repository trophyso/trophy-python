# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from .multi_stage_achievement_response import MultiStageAchievementResponse
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class EventResponseMetricsItem(UniversalBaseModel):
    metric_id: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="metricId")
    ] = pydantic.Field(default=None)
    """
    The ID of the metric.
    """

    completed: typing.Optional[typing.List[MultiStageAchievementResponse]] = (
        pydantic.Field(default=None)
    )
    """
    A list of any new achievements that the user has now completed as a result of this event being submitted.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
